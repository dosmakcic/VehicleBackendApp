
@using Project.Service.Services
@model PaginatedList<Project.MVC.Models.VehicleMakeViewModel>

@{
    ViewData["Title"] = "Vehicle Makes";
}

<h1>Vehicle Makes</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>



<form asp-controller="Make" asp-action="Index" method="get" class="form-inline">
    <div class="form-group">
        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="Search by Name or Abbreviation" />
        <input type="submit" value="Search" class="btn btn-primary" />
    </div>

</form>



<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParam"]">Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AbrvSortParam"]">Abbreviation</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Abrv)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a> |
                    <form asp-action="Delete" method="post" style="display:inline;">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@item.Id" />
                        <input type="submit" value="Delete" class="btn btn-danger" />
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="row">
    <div class="col-md-6">
        <div class="pagination">
            @if (Model.HasPreviousPage)
            {
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" class="btn btn-primary">Previous</a>
            }
            @if (Model.HasNextPage)
            {
                <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" class="btn btn-primary">Next</a>
            }
        </div>
    </div>
    <div class="col-md-6 text-right">
        <p>Page @Model.PageIndex of @Model.TotalPages</p>
    </div>
</div>
